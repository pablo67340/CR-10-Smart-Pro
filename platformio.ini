#
# Marlin Firmware
# PlatformIO Configuration File
#
# For detailed documentation with EXAMPLES:
#
# https://docs.platformio.org/en/latest/projectconf/index.html
#

# Automatic targets - enable auto-uploading
#targets = upload

[platformio]
src_dir      = Marlin
boards_dir   = buildroot/share/PlatformIO/boards
default_envs = STM32F103RET6_creality
include_dir  = Marlin
extra_configs =
    Marlin/config.ini
    ini/avr.ini
    ini/due.ini
    ini/esp32.ini
    ini/features.ini
    ini/lpc176x.ini
    ini/native.ini
    ini/samd21.ini
    ini/samd51.ini
    ini/stm32-common.ini
    ini/stm32f0.ini
    ini/stm32f1-maple.ini
    ini/stm32f1.ini
    ini/stm32f4.ini
    ini/stm32f7.ini
    ini/stm32h7.ini
    ini/stm32g0.ini
    ini/teensy.ini
    ini/renamed.ini

#
# The 'common' section applies to most Marlin builds.
#
# By default platformio build will abort after 5 errors.
# Remove '-fmax-errors=5' from build_flags below to see all.
#
[common]
build_flags        = -g -D__MARLIN_FIRMWARE__ -fmerge-all-constants -fmax-errors=5
extra_scripts      =
  pre:buildroot/share/PlatformIO/scripts/configuration.py
  pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
  pre:buildroot/share/PlatformIO/scripts/common-cxxflags.py
  pre:buildroot/share/PlatformIO/scripts/preflight-checks.py
  post:buildroot/share/PlatformIO/scripts/common-dependencies-post.py
lib_deps           =
default_src_filter = +<src/*> -<src/config> -<src/tests>
  ; LCDs and Controllers
  -<src/lcd/HD44780> -<src/lcd/dogm> -<src/lcd/TFTGLCD> -<src/lcd/tft> -<src/lcd/tft_io>
  -<src/lcd/e3v2> -<src/lcd/menu> -<src/lcd/extui> -<src/lcd/touch>
  -<src/lcd/lcdprint.cpp>
  ; Marlin HAL
  -<src/HAL>
  +<src/HAL/shared>
  -<src/HAL/shared/backtrace>
  -<src/HAL/shared/cpu_exception>
  -<src/HAL/shared/eeprom_if_i2c.cpp>
  -<src/HAL/shared/eeprom_if_spi.cpp>
  ; Features and G-Codes
  -<src/feature>
  -<src/gcode/bedlevel>
  -<src/gcode/calibrate>
  -<src/gcode/config>
  -<src/gcode/control>
  -<src/gcode/feature>
  -<src/gcode/geometry>
  -<src/gcode/host>
  -<src/gcode/lcd>
  -<src/gcode/motion>
  -<src/gcode/probe>
  -<src/gcode/scara>
  -<src/gcode/sd>
  -<src/gcode/temp>
  -<src/gcode/units>
  ; Library Code
  -<src/libs/heatshrink>
  -<src/libs/BL24CXX.cpp> -<src/libs/W25Qxx.cpp>
  -<src/libs/MAX31865.cpp>
  -<src/libs/hex_print.cpp>
  -<src/libs/least_squares_fit.cpp>
  -<src/libs/nozzle.cpp>
  ; Modules
  -<src/module>
  -<src/module/stepper>
  ; Media Support
  -<src/sd>
  ;
  ; Minimal Requirements
  ;
  +<src/gcode/calibrate/G28.cpp>
  +<src/gcode/config/M92.cpp>
  +<src/gcode/config/M200-M205.cpp>
  +<src/gcode/config/M220.cpp>
  +<src/gcode/control/M17_M18_M84.cpp>
  +<src/gcode/control/M80_M81.cpp>
  +<src/gcode/control/M85.cpp>
  +<src/gcode/control/M108_*.cpp>
  +<src/gcode/control/M111.cpp>
  +<src/gcode/control/M120_M121.cpp>
  +<src/gcode/control/M999.cpp>
  +<src/gcode/control/T.cpp>
  +<src/gcode/geometry/G92.cpp>
  +<src/gcode/host/M110.cpp>
  +<src/gcode/host/M114.cpp>
  +<src/gcode/host/M115.cpp>
  +<src/gcode/host/M118.cpp>
  +<src/gcode/host/M119.cpp>
  +<src/gcode/motion/G0_G1.cpp>
  +<src/gcode/motion/G4.cpp>
  +<src/gcode/motion/M400.cpp>
  +<src/gcode/temp/M105.cpp>
  +<src/module/endstops.cpp>
  +<src/module/motion.cpp>
  +<src/module/planner.cpp>
  +<src/module/settings.cpp>
  +<src/module/stepper.cpp>
  +<src/module/temperature.cpp>
  +<src/module/tool_change.cpp>
  +<src/module/stepper/indirection.cpp>

#
# Default values apply to all 'env:' prefixed environments
#
[env]
framework         = arduino
extra_scripts     = ${common.extra_scripts}
build_flags       = ${common.build_flags}
lib_deps          = ${common.lib_deps}
monitor_speed     = 250000
monitor_eol       = LF
monitor_echo      = yes
monitor_filters   = colorize, time, send_on_enter

#
# Just print the dependency tree
#
[env:include_tree]
platform         = atmelavr
board            = megaatmega2560
build_flags      = -c -H -std=gnu++11 -Wall -Os -D__MARLIN_FIRMWARE__
build_src_filter = +<src/MarlinCore.cpp>


#
# HAL/STM32F1 Common Environment values
#
[common_stm32f1]
platform      = ${common_stm32.platform}
build_flags   = !python Marlin/src/HAL/STM32F1/build_flags.py
  ${common.build_flags} -std=gnu++14 -DHAVE_SW_SERIAL
build_unflags = -std=gnu11
src_filter    = ${common.default_src_filter} +<src/HAL/STM32F1>
lib_ignore    = SPI
lib_deps      = ${common.lib_deps}
  SoftwareSerialM

#
# STM32F103RC
#
[env:STM32F103RC]
platform          = ${common_stm32f1.platform}
extends           = common_stm32f1
board             = genericSTM32F103RC
platform_packages = tool-stm32duino
monitor_speed     = 115200

#
# MEEB_3DP (STM32F103RCT6 with 512K)
#
[env:STM32F103RC_meeb]
platform          = ${common_stm32f1.platform}
extends           = common_stm32f1
board             = MEEB_3DP
platform_packages = tool-stm32duino
build_flags       = ${common_stm32f1.build_flags}
                    -DDEBUG_LEVEL=0
                    -DSS_TIMER=4
                    -DSTM32_FLASH_SIZE=512
                    -DHSE_VALUE=12000000U
                    -DUSE_USB_COMPOSITE
                    -DVECT_TAB_OFFSET=0x2000
                    -DGENERIC_BOOTLOADER
extra_scripts     = ${common.extra_scripts}
  pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
  buildroot/share/PlatformIO/scripts/STM32F103RC_MEEB_3DP.py
lib_deps          = ${common.lib_deps}
  Adafruit NeoPixel=https://github.com/ccccmagicboy/Adafruit_NeoPixel#meeb_3dp_use
  SoftwareSerialM
  USBComposite for STM32F1@0.91
debug_tool        = stlink
upload_protocol   = dfu

#
# STM32F103RC_fysetc
#
[env:STM32F103RC_fysetc]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC
extra_scripts     = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/STM32F103RC_fysetc.py
build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0
lib_ldf_mode      = chain
debug_tool        = stlink
upload_protocol   = serial

#
# BigTree SKR Mini V1.1 / SKR mini E3 / SKR E3 DIP (STM32F103RCT6 ARM Cortex-M3)
#
#   STM32F103RC_btt ............. RCT6 with 256K
#   STM32F103RC_btt_USB ......... RCT6 with 256K (USB mass storage)
#   STM32F103RC_btt_512K ........ RCT6 with 512K
#   STM32F103RC_btt_512K_USB .... RCT6 with 512K (USB mass storage)
#

[env:STM32F103RC_btt]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC
extra_scripts     = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/STM32F103RC_SKR_MINI.py
build_flags       = ${common_stm32f1.build_flags}
  -DDEBUG_LEVEL=0 -DSS_TIMER=4
monitor_speed     = 115200

[env:STM32F103RC_btt_USB]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC_btt
build_flags       = ${env:STM32F103RC_btt.build_flags} -DUSE_USB_COMPOSITE
lib_deps          = ${env:STM32F103RC_btt.lib_deps}
  USBComposite for STM32F1@0.91

[env:STM32F103RC_btt_512K]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC_btt
board_upload.maximum_size=524288
build_flags       = ${env:STM32F103RC_btt.build_flags} -DSTM32_FLASH_SIZE=512

[env:STM32F103RC_btt_512K_USB]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RC_btt_512K
build_flags       = ${env:STM32F103RC_btt_512K.build_flags} -DUSE_USB_COMPOSITE
lib_deps          = ${env:STM32F103RC_btt_512K.lib_deps}
  USBComposite for STM32F1@0.91

#
# STM32F103RE
#
[env:STM32F103RE]
platform          = ${common_stm32f1.platform}
extends           = common_stm32f1
board             = genericSTM32F103RE
platform_packages = tool-stm32duino
monitor_speed     = 115200

#
#   STM32F103RE_btt ............. RET6
#   STM32F103RE_btt_USB ......... RET6 (USB mass storage)
#
[env:STM32F103RE_btt]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RE
extra_scripts     = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/STM32F103RE_SKR_E3_DIP.py
build_flags       = ${common_stm32f1.build_flags} -DDEBUG_LEVEL=0 -DSS_TIMER=4
debug_tool        = stlink
upload_protocol   = stlink

[env:STM32F103RE_btt_USB]
platform          = ${common_stm32f1.platform}
extends           = env:STM32F103RE_btt
build_flags       = ${env:STM32F103RE_btt.build_flags} -DUSE_USB_COMPOSITE
lib_deps          = ${common_stm32f1.lib_deps}
  USBComposite for STM32F1@0.91

#
# STM32F4 with STM32GENERIC
#
[env:STM32F4]
platform      = ${common_stm32.platform}
board         = disco_f407vg
build_flags   = ${common.build_flags} -DUSE_STM32GENERIC -DSTM32GENERIC -DSTM32F4 -DMENU_USB_SERIAL -DMENU_SERIAL=SerialUSB -DHAL_IWDG_MODULE_ENABLED
src_filter    = ${common.default_src_filter} +<src/HAL/STM32_F4_F7> -<src/HAL/STM32_F4_F7/STM32F7>

#
# STM32F7 with STM32GENERIC
#
[env:STM32F7]
platform      = ${common_stm32.platform}
board         = remram_v1
build_flags   = ${common.build_flags} -DUSE_STM32GENERIC -DSTM32GENERIC -DSTM32F7 -DMENU_USB_SERIAL -DMENU_SERIAL=SerialUSB -DHAL_IWDG_MODULE_ENABLED
src_filter    = ${common.default_src_filter} +<src/HAL/STM32_F4_F7> -<src/HAL/STM32_F4_F7/STM32F4>

#
# ARMED (STM32)
#
[env:ARMED]
platform      = ${common_stm32.platform}
extends       = common_stm32
board         = armed_v1
build_flags   = ${common_stm32.build_flags}
  '-DUSB_PRODUCT="ARMED_V1"'
  -O2 -ffreestanding -fsigned-char -fno-move-loop-invariants -fno-strict-aliasing

#
# Geeetech GTM32 (STM32F103VET6)
#
[env:STM32F103VE_GTM32]
platform          = ${common_stm32f1.platform}
extends           = common_stm32f1
board             = genericSTM32F103VE
build_flags       = ${common_stm32f1.build_flags}
  -ffunction-sections -fdata-sections -nostdlib -MMD
  -DMCU_STM32F103VE -DARDUINO_GENERIC_STM32F103V -DARDUINO_ARCH_STM32F1 -DBOARD_generic_stm32f103v
  -DDEBUG_LEVEL=DEBUG_NONE -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DVECT_TAB_ADDR=0x8000000
  -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
upload_protocol   = serial

#
# Longer 3D board in Alfawise U20 (STM32F103VET6)
#
[env:STM32F103VE_longer]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103VE
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/STM32F103VE_longer.py
build_flags   = ${common_stm32f1.build_flags}
  -DMCU_STM32F103VE -DSTM32F1xx -USERIAL_USB -DU20 -DTS_V12
build_unflags = ${common_stm32f1.build_unflags}
  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1 -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6
lib_ignore    = ${common_stm32f1.lib_ignore}

#
# MKS Robin Mini (STM32F103VET6)
#
[env:mks_robin_mini]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103VE
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin_mini.py
build_flags   = ${common_stm32f1.build_flags}
  -DMCU_STM32F103VE

#
# MKS Robin Nano (STM32F103VET6)
# v1.2 - Emulated Graphical 128x64 (DOGM) UI and LVGL UI
# v2.0 - LVGL UI
#
[env:mks_robin_nano35]
platform        = ${common_stm32f1.platform}
extends         = common_stm32f1
board           = genericSTM32F103VE
platform_packages = tool-stm32duino
extra_scripts   = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin_nano35.py
lib_deps        = ${common_stm32f1.lib_deps}
build_flags     = ${common_stm32f1.build_flags}
  -DMCU_STM32F103VE -DSS_TIMER=4
debug_tool      = jlink
upload_protocol = jlink

#
# MKS Robin (STM32F103ZET6)
#
[env:mks_robin]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103ZE
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin.py
build_flags   = ${common_stm32f1.build_flags}
  -DSS_TIMER=4 -DSTM32_XL_DENSITY

#
# MKS Robin Pro (STM32F103ZET6)
#
[env:mks_robin_pro]
platform      = ${common_stm32f1.platform}
extends       = env:mks_robin
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin_pro.py


#
# TRIGORILLA PRO (STM32F103ZET6)
#
[env:trigorilla_pro]
platform      = ${common_stm32f1.platform}
extends       = env:mks_robin

#
# MKS Robin E3D (STM32F103RCT6) and
# MKS Robin E3 with TMC2209
#
[env:mks_robin_e3]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103RC
platform_packages = tool-stm32duino
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin_e3.py
build_flags   = ${common_stm32f1.build_flags}
  -DDEBUG_LEVEL=0 -DSS_TIMER=4

#
# MKS Robin Lite/Lite2 (STM32F103RCT6)
#
[env:mks_robin_lite]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103RC
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin_lite.py


#
# MKS ROBIN LITE3 (STM32F103RCT6)
#
[env:mks_robin_lite3]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103RC
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/mks_robin_lite3.py

#
# JGAurora A5S A1 (STM32F103ZET6)
#
[env:jgaurora_a5s_a1]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = genericSTM32F103ZE
extra_scripts = ${common.extra_scripts}
  buildroot/share/PlatformIO/scripts/jgaurora_a5s_a1_with_bootloader.py
build_flags   = ${common_stm32f1.build_flags}
  -DSTM32F1xx -DSTM32_XL_DENSITY

#
# Malyan M200 (STM32F103CB)
#
[env:STM32F103CB_malyan]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = malyanM200
build_flags   = ${common_stm32f1.build_flags}
  -DMCU_STM32F103CB -D__STM32F1__=1 -std=c++1y -DSERIAL_USB -ffunction-sections -fdata-sections
  -Wl,--gc-sections -DDEBUG_LEVEL=0 -D__MARLIN_FIRMWARE__
lib_ignore    = ${common_stm32f1.lib_ignore}
  SoftwareSerialM

#
# Malyan M200 v2 (STM32F070RB)
#
[env:STM32F070RB_malyan]
platform    = ${common_stm32.platform}
extends     = common_stm32
board       = malyanM200v2
build_flags = ${common_stm32.build_flags} -DSTM32F0xx -DUSB_PRODUCT=\"STM32F070RB\" -DHAL_PCD_MODULE_ENABLED
  -O2 -ffreestanding -fsigned-char -fno-move-loop-invariants -fno-strict-aliasing -std=gnu11 -std=gnu++11
  -DCUSTOM_STARTUP_FILE
lib_ignore  = SoftwareSerial

#
# Malyan M300 (STM32F070CB)
#
[env:malyan_M300]
platform    = ststm32@>=6.1.0,<6.2.0
board       = malyanm300_f070cb
build_flags = ${common.build_flags}
  -DUSBCON -DUSBD_VID=0x0483 "-DUSB_MANUFACTURER=\"Unknown\"" "-DUSB_PRODUCT=\"MALYAN_M300\""
  -DHAL_PCD_MODULE_ENABLED -DUSBD_USE_CDC -DDISABLE_GENERIC_SERIALUSB -DHAL_UART_MODULE_ENABLED
src_filter  = ${common.default_src_filter} +<src/HAL/STM32>

#
# Chitu boards like Tronxy X5s (STM32F103ZET6)
#
[env:chitu_f103]
platform      = ${common_stm32f1.platform}
extends       = common_stm32f1
board         = CHITU_F103
extra_scripts = pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
  pre:buildroot/share/PlatformIO/scripts/STM32F1_create_variant.py
  buildroot/share/PlatformIO/scripts/chitu_crypt.py
build_flags   = ${common_stm32f1.build_flags}
  -DSTM32F1xx -DSTM32_XL_DENSITY
build_unflags = ${common_stm32f1.build_unflags}
  -DCONFIG_MAPLE_MINI_NO_DISABLE_DEBUG= -DERROR_LED_PORT=GPIOE -DERROR_LED_PIN=6

#
# Some Chitu V5 boards have a problem with GPIO init.
# Use this target if G28 or G29 are always failing.
#
[env:chitu_v5_gpio_init]
platform      = ${common_stm32f1.platform}
extends       = env:chitu_f103
build_flags   = ${env:chitu_f103.build_flags} -DCHITU_V5_Z_MIN_BUGFIX

#
# Creality (STM32F103RET6)
#
[env:STM32F103RET6_creality]
platform        = ${common_stm32f1.platform}
extends         = common_stm32f1
board           = genericSTM32F103RE
build_flags     = !python Marlin/src/HAL/STM32F1/build_flags.py
  ${common.build_flags} -std=gnu++14 -DSTM32_XL_DENSITY -DTEMP_TIMER_CHAN=4
extra_scripts   = ${common.extra_scripts}
  pre:buildroot/share/PlatformIO/scripts/random-bin.py
  buildroot/share/PlatformIO/scripts/creality.py
lib_ignore      = ${common_stm32f1.lib_ignore}
debug_tool      = jlink
upload_protocol = jlink
monitor_speed   = 115200